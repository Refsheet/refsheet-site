:ruby
  tags = { 'f' => 'Feature', 'b' => 'Bug', 'p' => 'Patch', 'm' => 'Update' }
  file = File.open Rails.root.join 'CHANGELOG'
  i = 0

  @changelog = {}

  YAML.load_documents file do |log|
    break if (i+=1) >= (params[:show]&.to_i || 30)

    log = log.transform_keys { |k| k.gsub /^v/, '' }

    log.each do |version_str, notes|
      version_str = version_str.gsub /-\d+\.\d+$/, ''
      version = Semantic::Version.new(version_str) rescue Semantic::Version.new('0.0.0')
      last_version = version

      notes.collect! { |n| n.with_indifferent_access }
      notes.reject!  { |n| n[:tags].count <= 0 }

      notes.reverse.each do |note|
        note[:human_tags] = note[:tags].map { |t| tags[t] || t.humanize }
        @changelog[version] ||= []
        @changelog[version].push note
      end
    end
  end

%section.static-content
  .jumbotron.short
    .jumbotron-background
      .container.rich-text
        %h1= title 'Changelog'
        %p A hopefully helpful log of everything since changed!

  %section.margin-top--large
    .container.rich-text.markdown
      - @changelog.keys.each_with_index do |version, i|
        - notes = @changelog[version]
        - next_version = @changelog.keys[i+1]

        - if next_version.nil?
          %h3= "Version #{version.to_s}"

        - elsif i == 0 or version.major > next_version.major
          %h1
            = "Version #{version.to_s}"
            - if i == 0
              %span.caption.margin-left--medium (Current)

        - elsif version.minor > next_version.minor
          %h2= "Version #{version.to_s}"

        - else
          %h3= "Version #{version.to_s}"

        - last_version = version

        %ul.spaced
          - notes.each do |note|
            %li
              = note[:message]
              .muted
                %code.margin-right--large= note[:hash]

                - if note[:date].present?
                  %span.margin-right--large= note[:date]

                - note[:human_tags].each do |tag|
                  %span.chip= tag
