steps:

  #== BUILD

  - name: 'gcr.io/kaniko-project/executor'
    id: Build Container
    args:
      - --destination=gcr.io/$PROJECT_ID/refsheet-site-ci:$REVISION_ID
      - --cache=true
      - --dockerfile=./Dockerfile.ci

  #== SETUP

  - name: 'gcr.io/cloud-builders/docker'
    id: Postgres
    args:
      - run
      - -d
      - --name=postgres
      - --network=cloudbuild
      - -e
      - POSTGRES_PASSWORD=fishsticks
      - postgres

  # Wait for Postgres to become available
  - name: 'jwilder/dockerize:0.6.1'
    id: Postgres Start
    args:
      - dockerize
      - -timeout=60s
      - -wait=tcp://postgres:5432
    waitFor:
      - Postgres

  # Setup Database
  - name: 'gcr.io/$PROJECT_ID/refsheet-site-ci:$REVISION_ID'
    id: Migrate
    args: ['bundle', 'exec', 'rake', 'db:migrate']
    waitFor:
      - Build Container
      - Postgres Start

  #== TEST

  - name: 'gcr.io/$PROJECT_ID/refsheet-site-ci:$REVISION_ID'
    id: RSpec Unit
    args: ['bin/entrypoint.ci.sh', 'bundle', 'exec', 'rspec', '--exclude-pattern', '**/{features,requests,integration}/**/*_spec.rb']
    secretEnv:
      - CODECOV_TOKEN
    waitFor:
      - Migrate

  - name: 'gcr.io/$PROJECT_ID/refsheet-site-ci:$REVISION_ID'
    id: RSpec Integration
    args: ['bin/entrypoint.ci.sh', 'bundle', 'exec', 'rspec', '--pattern', '**/{features,requests,integration}/**/*_spec.rb']
    secretEnv:
      - CODECOV_TOKEN
    waitFor:
      - Migrate

  - name: 'gcr.io/$PROJECT_ID/refsheet-site-ci:$REVISION_ID'
    id: Karma
    args: ['bin/entrypoint.ci.sh', 'yarn', 'run', 'test']
    waitFor:
      - Build Container

  - name: 'gcr.io/$PROJECT_ID/refsheet-site-ci:$REVISION_ID'
    id: Prettier Check
    args: ['bin/entrypoint.ci.sh', 'yarn', 'run', 'prettier-check']
    waitFor:
      - Build Container

  #== TEARDOWN

  - name: 'gcr.io/cloud-builders/docker'
    id: Stop Postgres
    args: ['rm', '--force', 'postgres']
    waitFor:
      - RSpec Unit
      - RSpec Integration

options:
  env:
    - RAILS_ENV=test
    - RACK_ENV=test
    - NODE_ENV=test
    - DB_HOST=postgres
    - DB_USERNAME=postgres
    - DB_PASSWORD=fishsticks
    - DB_DATABASE=postgres
    - CI=true
  volumes:
    - name: bundle
      path: /usr/local/bundle
    - name: node
      path: /app/node_modules

# Create Secrets with:
# printf "value" | gcloud kms encrypt --plaintext-file=- --ciphertext-file=- --location=global --keyring=refsheet-ci \
#   --key=refsheet-ci | base64 -w0

secrets:
  - kmsKeyName: projects/refsheet-239409/locations/global/keyRings/refsheet-ci/cryptoKeys/refsheet-ci
    secretEnv:
      CODECOV_TOKEN: CiQA5Rk5QxccJ1JM+r6g/OJkGe+2xDp1GXSf8CRjvHCc3bNiXU8STQBhT4yKrD63EFjNRI0SGS5BxvxSq48q0UWA3l5QXo5Pj31DpNWl8Fi6Yf3mNumRImTSVMCBgnU/jWd0HQU8p31HTDlJHj5Z/zIS+JsU

timeout: 3600s
tags: ['ci']